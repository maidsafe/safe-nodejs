name: Tests

on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - '*'


env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SN_CLI_VERSION: "0.15.0"
  SN_NODE_VERSION: "0.25.1"
  SN_AUTHD_VERSION: "0.0.11"

jobs:
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Download Safe Node Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run:  wget "https://github.com/maidsafe/sn_node/releases/download/v${{env.SN_NODE_VERSION}}/sn_node-${{env.SN_NODE_VERSION}}-x86_64-unknown-linux-musl.tar.gz" -O ./node.tar.gz;

      - name: Download Safe Node Mac
        if: matrix.os == 'macos-latest'
        run: wget "https://github.com/maidsafe/sn_node/releases/download/v${{env.SN_NODE_VERSION}}/sn_node-${{env.SN_NODE_VERSION}}-x86_64-apple-darwin.tar.gz" -O ./node.tar.gz;

      - name: Download Safe Node Win
        if: matrix.os == 'windows-latest'
        run: |
          choco install wget
          wget "https://github.com/maidsafe/sn_node/releases/download/v${{env.SN_NODE_VERSION}}/sn_node-${{env.SN_NODE_VERSION}}-x86_64-pc-windows-msvc.tar.gz" -O ./node.tar.gz;

      - name: Place Safe Node
        run:  |
          ls .
          mkdir -p $HOME/.safe/node
          tar -xvzf ./node.tar.gz -C $HOME/.safe/node/
          chmod +x $HOME/.safe/node/sn_node

      - name: Download Safe CLI Linux
        if: matrix.os == 'ubuntu-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/v${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-unknown-linux-gnu.tar.gz" -O ./safe.tar.gz;

      - name: Download Safe CLI Mac
        if: matrix.os == 'macos-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/v${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-apple-darwin.tar.gz" -O ./safe.tar.gz;

      - name: Download Safe CLI Windows
        if: matrix.os == 'windows-latest'
        run: wget "https://github.com/maidsafe/sn_api/releases/download/v${{env.SN_CLI_VERSION}}/sn_cli-${{env.SN_CLI_VERSION}}-x86_64-pc-windows-msvc.tar.gz" -O ./safe.tar.gz;

      - name: Place Safe CLI
        run:  |
          ls .
          mkdir -p $HOME/.safe/sn_cli
          tar -xvzf ./safe.tar.gz -C $HOME/.safe/sn_cli/
          echo "::add-path::$HOME/.safe/sn_cli"
          chmod +x $HOME/.safe/sn_cli/safe

      - name: Download Safe authd Linux
        if: matrix.os == 'ubuntu-latest'
        run: wget "https://sn-api.s3.eu-west-2.amazonaws.com/sn_authd-${{env.SN_AUTHD_VERSION}}-x86_64-unknown-linux-musl.tar.gz" -O ./authd.tar.gz;

      - name: Download Safe authd Mac
        if: matrix.os == 'macos-latest'
        run: wget "https://sn-api.s3.eu-west-2.amazonaws.com/sn_authd-${{env.SN_AUTHD_VERSION}}-x86_64-apple-darwin.tar.gz" -O ./authd.tar.gz;

      - name: Download Safe authd Windows
        if: matrix.os == 'windows-latest'
        run: wget "https://sn-api.s3.eu-west-2.amazonaws.com/sn_authd-${{env.SN_AUTHD_VERSION}}-x86_64-pc-windows-msvc.tar.gz" -O ./authd.tar.gz;

      - name: Place Safe authd
        run:  |
          ls .
          mkdir -p $HOME/.safe/authd
          tar -xvzf ./authd.tar.gz -C $HOME/.safe/authd/
          echo "::add-path::$HOME/.safe/authd"
          chmod +x $HOME/.safe/authd/sn_authd

      - name: Check Safe Versions
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run : |
          $HOME/.safe/authd/sn_authd -V
          $HOME/.safe/node/sn_node -V
          safe --version
          cat native/Cargo.toml

      # - name: Check Safe Versions
      #   if: matrix.os == 'windows-latest'
      #   run : |
      #     $HOME/.safe/authd/sn_authd.exe -V
      #     $HOME/.safe/node/sn_node.exe -V
      #     safe --version

      - run : yarn
      - name: Mock Tests
        run: |
          yarn neon clean
          yarn build-mock
          yarn test-api
      - name: Mini-Network Setup
        run : safe node run-baby-fleming
      - name: Build For Node
        run: |
          yarn neon clean
          yarn build
      - name: Run Auth Tests
        env:
          RUST_LOG: debug
        run: yarn test-auth
      - name: Authd Logs
        run: |
          cat $HOME/.safe/authd/logs/sn_authd.out
          cat $HOME/.safe/authd/logs/sn_authd.err
        if: failure()
